(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6671],{17023:function(e){"use strict";e.exports=JSON.parse('{"description":"Defines a new managed table in a managed data source. The table definition will immediately be updated in the Pantheon query engine.\\n\\n_Special Notes_\\n\\n* Managed tables may only be created within a managed data source, otherwise a validation error is returned.\\n\\n* This endpoint is used from the Workbench.\\n","operationId":"CreateManagedTable","requestBody":{"content":{"application/json":{"schema":{"properties":{"defaultInsertMode":{"description":"Defines how to apply rows to a table.\\nupsert: insert or update rows from the upload to the table\\nappend: insert rows from the upload to the table.","enum":["upsert","append"],"type":"string"},"description":{"maxLength":255,"type":"string"},"expiresAt":{"description":"Table will be deleted at the specified time","format":"date-time","nullable":true,"type":"string"},"name":{"maxLength":56,"minLength":2,"pattern":"^[a-zA-Z]+[a-zA-Z0-9_]*$","type":"string"},"schema":{"description":"Schema of a file or of the corresponding managed table which will be created","properties":{"columns":{"description":"Definitions of columns and their types. The order is important and should match the order of columns in the file which is going to be uploaded","example":[{"name":"timestamp","required":true,"type":"datetime"},{"name":"office","required":false,"type":"string"},{"name":"event","required":true,"type":"string"},{"name":"days_without_accident","required":false,"type":"integer"}],"items":{"properties":{"name":{"description":"The name of the column, length restrictions are inherited from the underlying database restriction on identifiers","maxLength":63,"minLength":2,"pattern":"^[a-zA-Z]+[a-zA-Z0-9_]*$","type":"string"},"required":{"default":false,"type":"boolean"},"type":{"description":"The data type of the column in a managed table","enum":["bool","integer","decimal","text","date","time","datetime"],"type":"string"}},"required":["name","type","required"],"type":"object"},"type":"array"},"indexes":{"description":"Definitions of the managed table indexes. These may be simple or compound indexes, i.e. they may contain one or more columns.\\nThe appropriate index will be chosen based on the storage engine.\\n","example":[{"columns":["office","event"],"indexType":"btree"},{"columns":["timestamp"],"indexType":"btree"}],"items":{"properties":{"columns":{"items":{"description":"The name of a column from the managed table columns array","maxLength":63,"minLength":2,"pattern":"^[a-zA-Z]+[a-zA-Z0-9_]*$","type":"string"},"minItems":1,"type":"array"},"indexType":{"default":"btree","description":"Supported index types","enum":["btree","hash"],"type":"string"}},"required":["columns","indexType"],"type":"object"},"type":"array"}},"required":["columns"],"type":"object"}},"required":["name","description","defaultInsertMode","schema","expiresAt"],"type":"object"}}}},"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"data":{"properties":{"createdAt":{"format":"date-time","type":"string"},"currentColumnSetId":{"format":"uuid","type":"string"},"dataSourceId":{"format":"uuid","type":"string"},"description":{"maxLength":255,"type":"string"},"documentation":{"description":"Long form markdown field that can be used to document the resource","type":"string"},"externalId":{"nullable":true,"type":"string"},"id":{"format":"uuid","type":"string"},"isOrphaned":{"description":"Indicates that this table couldn\'t be synced from an external system","type":"boolean"},"kind":{"enum":["table"],"type":"string"},"lastUpdateErrorMessage":{"description":"contains an error message indicating why this table schema could not be updated","type":"string"},"name":{"maxLength":63,"type":"string"},"orphanedAt":{"format":"date-time","nullable":true,"type":"string"},"projectId":{"format":"uuid","type":"string"},"properties":{"type":"object"},"sql":{"description":"query that defines the table in case of a view","type":"string"},"stats":{"description":"Various statistics about the table","properties":{"columnCount":{"description":"How many columns the table has","type":"integer"},"linkCount":{"description":"How many links this resource is part of, either as a source or a target","type":"integer"}},"required":["columnCount","linkCount"],"type":"object"},"type":{"description":"Table type computed from the metadata:\\n* `ViewTable`: defined as a sql view (comes with a sql definition)\\n* `MaterializationTable`: same as view, but materialized\\n* `ExternalTable`: a table that is linked to an external entity not in the underlying data source (e.g. a FDW in postgres, or a BigQuery table which has its data populated from a spreadsheet)\\n* `RegularTable`: any other table types, including, but not limited to, a regular database table\\n* `OtherTable`: is just a fallback if the type is unknown.\\n","enum":["ViewTable","MaterializationTable","RegularTable","ExternalTable","OtherTable"],"type":"string"},"updatedAt":{"format":"date-time","type":"string"}},"required":["id","projectId","kind","name","description","documentation","dataSourceId","currentColumnSetId","isOrphaned","createdAt","updatedAt","orphanedAt","externalId","type","properties","stats"],"type":"object"},"fieldspec":{"items":{"properties":{"description":{"description":"A description of the purpose of this field\\n","maxLength":255,"type":"string"},"displayName":{"description":"A nice human-readable name for that field\\n","type":"string"},"filterable":{"default":false,"description":"Should this field show up as a filter in the catalog\\n","type":"boolean"},"hideIfEmpty":{"default":false,"description":"Should this field be hidden when the value is empty\\n","type":"boolean"},"inherited":{"default":false,"description":"Indicates that this field may be inherited from the parent resource\\n","type":"boolean"},"key":{"description":"lookup key for the field on the specific response types in dot notation.\\nExamples:\\n  `name` -> name is found toplevel of the instance object, i.e. `obj.name`\\n  `properties.category` -> category is found in the properties subobject, i.e. `obj.properties.category`\\n","type":"string"},"kind":{"description":"The source type of the field.\\n\\n- System fields are non-editable default fields.  These can not be modified for deleted.\\n\\n- Configurable fields are editable default fields. These can be modified but not deleted.\\n\\n- Custom are user defined fields. These are fully defined by the user.\\n","enum":["system","configurable","custom"],"readOnly":true,"type":"string"},"maxValue":{"nullable":true,"type":"number"},"minValue":{"nullable":true,"type":"number"},"name":{"description":"A nice computer-readable name for that field usable in postgres\\n","type":"string"},"searchable":{"default":false,"description":"Should this field be used in the catalog fuzzy search\\n","type":"boolean"},"type":{"description":"The data type of the field:\\n\\n- `text` is an arbitrary string\\n\\n- `multitext` is an arbitrary array of strings\\n\\n- `select` a value which can be selected from a list\\n\\n- `multiselect` is a `select` with multiple selected values, represented as an array\\n\\n- `boolean` is `true` or `false` value\\n\\n- `date` is a date string in `yyyy-mm-dd` format, e.g. `2019-08-21`\\n\\n- `datetime` is an RFC3339 datetime string, e.g. `2019-08-21T11:54:30.369917Z`\\n\\n- `number` is a numeric value, described by RFC8259, section 6.\\n\\n- `link` is a link object with a displayed text and URL, e.g. `{\\"displayText\\": \\"text\\", \\"url\\": \\"http://example.com\\"}`. Only absolute URLs with HTTP/HTTPS protocol are allowed.\\n","enum":["text","multitext","select","multiselect","boolean","date","datetime","number","link"],"type":"string"},"validValues":{"items":{"type":"string"},"type":"array"}},"required":["name","key","type","kind","filterable","searchable","description","hideIfEmpty","inherited"],"type":"object"},"type":"array"}},"required":["fieldspec","data"],"type":"object"}}},"description":"Object containing the created managed table"},"401":{"content":{"application/json":{"schema":{"description":"General error response that usually has a very generic message","properties":{"errors":{"items":{"properties":{"message":{"type":"string"},"type":{"description":"The type of the general error response","enum":["GeneralError"],"type":"string"}},"required":["type","message"],"type":"object"},"type":"array"}},"required":["errors"],"type":"object"}}},"description":"User unauthorized"},"403":{"content":{"application/json":{"schema":{"description":"General error response that usually has a very generic message","properties":{"errors":{"items":{"properties":{"message":{"type":"string"},"type":{"description":"The type of the general error response","enum":["GeneralError"],"type":"string"}},"required":["type","message"],"type":"object"},"type":"array"}},"required":["errors"],"type":"object"}}},"description":"User forbidden"},"404":{"content":{"application/json":{"schema":{"description":"General error response that usually has a very generic message","properties":{"errors":{"items":{"properties":{"message":{"type":"string"},"type":{"description":"The type of the general error response","enum":["GeneralError"],"type":"string"}},"required":["type","message"],"type":"object"},"type":"array"}},"required":["errors"],"type":"object"}}},"description":"Data source or permission not found"},"422":{"content":{"application/json":{"schema":{"description":"Error message that contains detailed information about certain parameters being incorrect","properties":{"errors":{"items":{"properties":{"key":{"type":"string"},"message":{"type":"string"},"type":{"description":"The type of the field error response","enum":["FieldError"],"type":"string"}},"required":["type","key","message"],"type":"object"},"type":"array"}},"required":["errors"],"type":"object"}}},"description":"Some of the give parameters are not correct"},"500":{"content":{"application/json":{"schema":{"description":"General error response that usually has a very generic message","properties":{"errors":{"items":{"properties":{"message":{"type":"string"},"type":{"description":"The type of the general error response","enum":["GeneralError"],"type":"string"}},"required":["type","message"],"type":"object"},"type":"array"}},"required":["errors"],"type":"object"}}},"description":"Internal server error"}},"summary":"Create new managed table","tags":["data sources","tables"],"x-handler-group":"Tables","postman":{"name":"Create new managed table","description":{"content":"Defines a new managed table in a managed data source. The table definition will immediately be updated in the Pantheon query engine.\\n\\n_Special Notes_\\n\\n* Managed tables may only be created within a managed data source, otherwise a validation error is returned.\\n\\n* This endpoint is used from the Workbench.\\n","type":"text/plain"},"url":{"path":["api","v1",":projectId","datasources",":dataSourceId","managed-tables"],"host":["{{baseUrl}}"],"query":[],"variable":[{"description":{"content":"(Required) UUID of the project","type":"text/plain"},"type":"any","value":"<uuid>","key":"projectId"},{"description":{"content":"(Required) UUID or name of the data source","type":"text/plain"},"type":"any","value":"<string>","key":"dataSourceId"}]},"header":[{"key":"Content-Type","value":"application/json"}],"method":"POST","body":{"mode":"raw","raw":"{\\n    \\"name\\": \\"<string>\\",\\n    \\"description\\": \\"<string>\\",\\n    \\"defaultInsertMode\\": \\"<string>\\",\\n    \\"schema\\": {\\n        \\"columns\\": [\\n            {\\n                \\"name\\": \\"<string>\\",\\n                \\"type\\": \\"<string>\\",\\n                \\"required\\": false\\n            },\\n            {\\n                \\"name\\": \\"<string>\\",\\n                \\"type\\": \\"<string>\\",\\n                \\"required\\": false\\n            }\\n        ],\\n        \\"indexes\\": [\\n            {\\n                \\"columns\\": [\\n                    \\"<string>\\"\\n                ],\\n                \\"indexType\\": \\"btree\\"\\n            },\\n            {\\n                \\"columns\\": [\\n                    \\"<string>\\"\\n                ],\\n                \\"indexType\\": \\"btree\\"\\n            }\\n        ]\\n    },\\n    \\"expiresAt\\": \\"<dateTime>\\"\\n}"}},"method":"post","path":"/api/v1/{projectId}/datasources/{dataSourceId}/managed-tables","hashId":"create-new-managed-table","servers":[{"description":"Locally running","url":"http://localhost:{port}/hub","variables":{"port":{"default":"9191"}}},{"description":"Development environment","url":"https://dev.contiamo.io/{tenantId}/hub","variables":{"tenantId":{"default":"demo"}}},{"description":"Staging environment","url":"https://stg.contiamo.io/{tenantId}/hub","variables":{"tenantId":{"default":"demo"}}},{"description":"Production environment","url":"https://cloud.contiamo.com/{tenantId}/hub","variables":{"tenantId":{"default":"demo"}}}],"security":[{"tokenAuth":[]},{"doubleCookieAuth":[],"doubleCookieHeader":[]}],"permalink":"/contiamo/api/create-new-managed-table","previous":{"title":"Update a stream","permalink":"/contiamo/api/update-a-stream"},"next":{"title":"Create a table","permalink":"/contiamo/api/create-a-table"},"jsonRequestBodyExample":{"defaultInsertMode":"upsert","description":"string","expiresAt":"string","name":"string","schema":{"columns":[{"name":"timestamp","required":true,"type":"datetime"},{"name":"office","required":false,"type":"string"},{"name":"event","required":true,"type":"string"},{"name":"days_without_accident","required":false,"type":"integer"}],"indexes":[{"columns":["office","event"],"indexType":"btree"},{"columns":["timestamp"],"indexType":"btree"}]}}}')}}]);