(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[376],{297782:function(e){"use strict";e.exports=JSON.parse('{"description":"Parse and ingest a file into an existing managed table","operationId":"CreateIngestionTask","parameters":[{"description":"UUID of the project","in":"path","name":"projectId","required":true,"schema":{"format":"uuid","type":"string"}},{"description":"UUID or name of the managed data source","in":"path","name":"dataSourceId","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"properties":{"columnMapping":{"description":"Defines how to map the columns from a file to be ingested\\nto the columns of the target table.\\nThis allows to reorder and/or drop certain columns of the input data","items":{"properties":{"source":{"description":"Name of the source column","type":"string"},"target":{"description":"Name of the target column","type":"string"}},"required":["source","target"],"type":"object"},"type":"array"},"fileId":{"description":"ID of the uploaded file","maxLength":255,"minLength":2,"type":"string"},"insertMode":{"description":"Defines how to apply rows to a table.\\nupsert: insert or update rows from the upload to the table\\nappend: insert rows from the upload to the table.","enum":["upsert","append"],"type":"string"},"options":{"description":"FileOptions determine how the file will be opened and parsed","properties":{"commentCharacter":{"description":"The character used to indicate that a line is a comment, the line must start with this character.\\n\\nCommon values include \\"#\\" and \\"//\\"\\n","maxLength":2,"type":"string"},"decimalSeparator":{"description":"FileDecimalSeparator determines how numeric values are parsed, e.g. \'10,50\'.","enum":["numericPeriod","numericComma"],"type":"string"},"delimiter":{"description":"FileDelimiter is used to determine the column separator in a CSV file.\\n\\nCommon values include \'comma\', \'semicolon\', and \'tab\'\\n","maxLength":1,"type":"string"},"encoding":{"description":"FileEncodingOption determines the encoding used when opening the file.","enum":["UTF-8","ISO-8859-1","ISO-8859-2","GBK","GB18030","Shift-JIS","EUC-JP","EUC-KR","KOI8-R"],"type":"string"},"hasHeader":{"default":true,"description":"Read the first non-empty line as the column headers/names","type":"boolean"},"ignoreHeader":{"default":false,"description":"If the file has headers, these are ignored when determining the column names","type":"boolean"},"preferredDateFormat":{"description":"FilePreferredDateFormat determines how to parse ambiguous dates, such as \'02-02-2010\'.","enum":["monthFirst","dayFirst","yearFirst"],"type":"string"},"trimSpaces":{"default":true,"description":"Determine if discovery should trim leading and trailing spaces from values. Note that spaces will always be trimmed from column names.","type":"boolean"}},"required":["preferredDateFormat","delimiter","decimalSeparator","encoding","commentCharacter","hasHeader","ignoreHeader","trimSpaces"],"type":"object"},"schema":{"description":"Schema of a file or of the corresponding managed table which will be created","properties":{"columns":{"description":"Definitions of columns and their types. The order is important and should match the order of columns in the file which is going to be uploaded","example":[{"name":"timestamp","required":true,"type":"datetime"},{"name":"office","required":false,"type":"string"},{"name":"event","required":true,"type":"string"},{"name":"days_without_accident","required":false,"type":"integer"}],"items":{"properties":{"name":{"description":"The name of the column, length restrictions are inherited from the underlying database restriction on identifiers","maxLength":63,"minLength":2,"pattern":"^[a-zA-Z]+[a-zA-Z0-9_]*$","type":"string"},"required":{"default":false,"type":"boolean"},"type":{"description":"The data type of the column in a managed table","enum":["bool","integer","decimal","text","date","time","datetime"],"type":"string"}},"required":["name","type","required"],"type":"object"},"type":"array"},"indexes":{"description":"Definitions of the managed table indexes. These may be simple or compound indexes, i.e. they may contain one or more columns.\\nThe appropriate index will be chosen based on the storage engine.\\n","example":[{"columns":["office","event"],"indexType":"btree"},{"columns":["timestamp"],"indexType":"btree"}],"items":{"properties":{"columns":{"items":{"description":"The name of a column from the managed table columns array","maxLength":63,"minLength":2,"pattern":"^[a-zA-Z]+[a-zA-Z0-9_]*$","type":"string"},"minItems":1,"type":"array"},"indexType":{"default":"btree","description":"Supported index types","enum":["btree","hash"],"type":"string"}},"required":["columns","indexType"],"type":"object"},"type":"array"}},"required":["columns"],"type":"object"},"tableId":{"description":"Uuid or name of the table","type":"string"}},"required":["tableId","fileId","schema","options","insertMode"],"type":"object"}}},"description":"File parsing options and schema","required":true},"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"collectionId":{"format":"uuid","readOnly":true,"type":"string"},"createdAt":{"format":"date-time","readOnly":true,"type":"string"},"fileId":{"maxLength":255,"minLength":2,"readOnly":true,"type":"string"},"fileName":{"readOnly":true,"type":"string"},"finishedAt":{"format":"date-time","nullable":true,"readOnly":true,"type":"string"},"insertMode":{"description":"Defines how to apply rows to a table.\\nupsert: insert or update rows from the upload to the table\\nappend: insert rows from the upload to the table.","enum":["upsert","append"],"type":"string"},"startedAt":{"format":"date-time","nullable":true,"readOnly":true,"type":"string"},"status":{"description":"Current state of the task","enum":["waiting","running","cancelled","finished","failed"],"type":"string"},"statusData":{"properties":{"detectedRowCount":{"description":"The number of rows that were detected in the import","format":"int32","readOnly":true,"type":"integer"},"errorRowCount":{"description":"The number of rows that errored during import","format":"int32","readOnly":true,"type":"integer"},"fileSize":{"readOnly":true,"type":"string"},"importedRowCount":{"description":"The number of rows successfully imported","format":"int32","readOnly":true,"type":"integer"}},"required":["fileSize","importedRowCount","detectedRowCount","errorRowCount"],"type":"object"},"tableId":{"format":"uuid","readOnly":true,"type":"string"},"tableName":{"readOnly":true,"type":"string"},"taskId":{"format":"uuid","readOnly":true,"type":"string"},"upsertOn":{"description":"rows used to match file data to a possibly existing row, only used and required if insertMode is `upsert`\\n","items":{"type":"string"},"type":"array"}},"required":["taskId","collectionId","tableId","tableName","fileId","fileName","createdAt","startedAt","finishedAt","status","statusData","insertMode","upsertRows","upsertOn"],"type":"object"}}},"description":"Initial file metadata and ingest task ID"},"401":{"content":{"application/json":{"schema":{"description":"General error response that usually has a very generic message","properties":{"errors":{"items":{"properties":{"message":{"type":"string"},"type":{"description":"The type of the general error response","enum":["GeneralError"],"type":"string"}},"required":["type","message"],"type":"object"},"type":"array"}},"required":["errors"],"type":"object"}}},"description":"User unauthorized"},"403":{"content":{"application/json":{"schema":{"description":"General error response that usually has a very generic message","properties":{"errors":{"items":{"properties":{"message":{"type":"string"},"type":{"description":"The type of the general error response","enum":["GeneralError"],"type":"string"}},"required":["type","message"],"type":"object"},"type":"array"}},"required":["errors"],"type":"object"}}},"description":"User forbidden"},"404":{"content":{"application/json":{"schema":{"description":"General error response that usually has a very generic message","properties":{"errors":{"items":{"properties":{"message":{"type":"string"},"type":{"description":"The type of the general error response","enum":["GeneralError"],"type":"string"}},"required":["type","message"],"type":"object"},"type":"array"}},"required":["errors"],"type":"object"}}},"description":"Data source not found"},"422":{"content":{"application/json":{"schema":{"description":"Error message that contains detailed information about certain parameters being incorrect","properties":{"errors":{"items":{"properties":{"key":{"type":"string"},"message":{"type":"string"},"type":{"description":"The type of the field error response","enum":["FieldError"],"type":"string"}},"required":["type","key","message"],"type":"object"},"type":"array"}},"required":["errors"],"type":"object"}}},"description":"Some of the give parameters are not correct"},"500":{"content":{"application/json":{"schema":{"description":"General error response that usually has a very generic message","properties":{"errors":{"items":{"properties":{"message":{"type":"string"},"type":{"description":"The type of the general error response","enum":["GeneralError"],"type":"string"}},"required":["type","message"],"type":"object"},"type":"array"}},"required":["errors"],"type":"object"}}},"description":"Internal server error"}},"summary":"Ingest a file into a managed table","tags":["data sources","tasks"],"x-handler-group":"ProxiedTasks","postman":{"name":"Ingest a file into a managed table","description":{"content":"Parse and ingest a file into an existing managed table","type":"text/plain"},"url":{"path":["api","v1",":projectId","datasources",":dataSourceId","tasks"],"host":["{{baseUrl}}"],"query":[],"variable":[{"description":{"content":"(Required) UUID of the project","type":"text/plain"},"type":"any","value":"<uuid>","key":"projectId"},{"description":{"content":"(Required) UUID or name of the managed data source","type":"text/plain"},"type":"any","value":"<string>","key":"dataSourceId"}]},"header":[{"key":"Content-Type","value":"application/json"}],"method":"POST","body":{"mode":"raw","raw":"{\\n    \\"tableId\\": \\"<string>\\",\\n    \\"fileId\\": \\"<string>\\",\\n    \\"schema\\": {\\n        \\"columns\\": [\\n            {\\n                \\"name\\": \\"<string>\\",\\n                \\"type\\": \\"<string>\\",\\n                \\"required\\": false\\n            },\\n            {\\n                \\"name\\": \\"<string>\\",\\n                \\"type\\": \\"<string>\\",\\n                \\"required\\": false\\n            }\\n        ],\\n        \\"indexes\\": [\\n            {\\n                \\"columns\\": [\\n                    \\"<string>\\"\\n                ],\\n                \\"indexType\\": \\"btree\\"\\n            },\\n            {\\n                \\"columns\\": [\\n                    \\"<string>\\"\\n                ],\\n                \\"indexType\\": \\"btree\\"\\n            }\\n        ]\\n    },\\n    \\"options\\": {\\n        \\"preferredDateFormat\\": \\"<string>\\",\\n        \\"delimiter\\": \\"<string>\\",\\n        \\"decimalSeparator\\": \\"<string>\\",\\n        \\"encoding\\": \\"<string>\\",\\n        \\"commentCharacter\\": \\"<string>\\",\\n        \\"hasHeader\\": true,\\n        \\"ignoreHeader\\": false,\\n        \\"trimSpaces\\": true\\n    },\\n    \\"insertMode\\": \\"<string>\\",\\n    \\"columnMapping\\": [\\n        {\\n            \\"source\\": \\"<string>\\",\\n            \\"target\\": \\"<string>\\"\\n        },\\n        {\\n            \\"source\\": \\"<string>\\",\\n            \\"target\\": \\"<string>\\"\\n        }\\n    ]\\n}"}},"method":"post","path":"/api/v1/{projectId}/datasources/{dataSourceId}/tasks","hashId":"ingest-a-file-into-a-managed-table","servers":[{"description":"Locally running","url":"http://localhost:{port}/hub","variables":{"port":{"default":"9191"}}},{"description":"Development environment","url":"https://dev.contiamo.io/{tenantId}/hub","variables":{"tenantId":{"default":"demo"}}},{"description":"Staging environment","url":"https://stg.contiamo.io/{tenantId}/hub","variables":{"tenantId":{"default":"demo"}}},{"description":"Production environment","url":"https://cloud.contiamo.com/{tenantId}/hub","variables":{"tenantId":{"default":"demo"}}}],"security":[{"tokenAuth":[]},{"doubleCookieAuth":[],"doubleCookieHeader":[]}],"permalink":"/contiamo/api/ingest-a-file-into-a-managed-table","previous":{"title":"List ingestion tasks for a managed data source","permalink":"/contiamo/api/list-ingestion-tasks-for-a-managed-data-source"},"next":{"title":"Cancel file ingestion task","permalink":"/contiamo/api/cancel-file-ingestion-task"},"jsonRequestBodyExample":{"columnMapping":[{"source":"string","target":"string"}],"fileId":"string","insertMode":"upsert","options":{"commentCharacter":"string","decimalSeparator":"numericPeriod","delimiter":"string","encoding":"UTF-8","hasHeader":true,"ignoreHeader":false,"preferredDateFormat":"monthFirst","trimSpaces":true},"schema":{"columns":[{"name":"timestamp","required":true,"type":"datetime"},{"name":"office","required":false,"type":"string"},{"name":"event","required":true,"type":"string"},{"name":"days_without_accident","required":false,"type":"integer"}],"indexes":[{"columns":["office","event"],"indexType":"btree"},{"columns":["timestamp"],"indexType":"btree"}]},"tableId":"string"}}')}}]);