(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9560],{733902:function(e){"use strict";e.exports=JSON.parse('{"description":"This creates a new table resource\\n","operationId":"CreateTable","parameters":[{"description":"UUID of the project","in":"path","name":"projectId","required":true,"schema":{"format":"uuid","type":"string"}},{"description":"UUID of the data source","in":"path","name":"dataSourceId","required":true,"schema":{"format":"uuid","type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"properties":{"description":{"maxLength":255,"type":"string"},"documentation":{"type":"string"},"externalId":{"nullable":true,"type":"string"},"name":{"maxLength":63,"minLength":1,"type":"string"},"properties":{"type":"object"},"type":{"description":"Table type computed from the metadata:\\n* `ViewTable`: defined as a sql view (comes with a sql definition)\\n* `MaterializationTable`: same as view, but materialized\\n* `ExternalTable`: a table that is linked to an external entity not in the underlying data source (e.g. a FDW in postgres, or a BigQuery table which has its data populated from a spreadsheet)\\n* `RegularTable`: any other table types, including, but not limited to, a regular database table\\n* `OtherTable`: is just a fallback if the type is unknown.\\n","enum":["ViewTable","MaterializationTable","RegularTable","ExternalTable","OtherTable"],"type":"string"}},"required":["name","type"],"type":"object"}}},"description":"table to create","required":true},"responses":{"201":{"content":{"application/json":{"schema":{"properties":{"createdAt":{"format":"date-time","type":"string"},"currentColumnSetId":{"format":"uuid","type":"string"},"dataSourceId":{"format":"uuid","type":"string"},"description":{"maxLength":255,"type":"string"},"documentation":{"description":"Long form markdown field that can be used to document the resource","type":"string"},"externalId":{"nullable":true,"type":"string"},"id":{"format":"uuid","type":"string"},"isOrphaned":{"description":"Indicates that this table couldn\'t be synced from an external system","type":"boolean"},"kind":{"enum":["table"],"type":"string"},"lastUpdateErrorMessage":{"description":"contains an error message indicating why this table schema could not be updated","type":"string"},"name":{"maxLength":63,"type":"string"},"orphanedAt":{"format":"date-time","nullable":true,"type":"string"},"projectId":{"format":"uuid","type":"string"},"properties":{"type":"object"},"sql":{"description":"query that defines the table in case of a view","type":"string"},"stats":{"description":"Various statistics about the table","properties":{"columnCount":{"description":"How many columns the table has","type":"integer"},"linkCount":{"description":"How many links this resource is part of, either as a source or a target","type":"integer"}},"required":["columnCount","linkCount"],"type":"object"},"type":{"description":"Table type computed from the metadata:\\n* `ViewTable`: defined as a sql view (comes with a sql definition)\\n* `MaterializationTable`: same as view, but materialized\\n* `ExternalTable`: a table that is linked to an external entity not in the underlying data source (e.g. a FDW in postgres, or a BigQuery table which has its data populated from a spreadsheet)\\n* `RegularTable`: any other table types, including, but not limited to, a regular database table\\n* `OtherTable`: is just a fallback if the type is unknown.\\n","enum":["ViewTable","MaterializationTable","RegularTable","ExternalTable","OtherTable"],"type":"string"},"updatedAt":{"format":"date-time","type":"string"}},"required":["id","projectId","kind","name","description","documentation","dataSourceId","currentColumnSetId","isOrphaned","createdAt","updatedAt","orphanedAt","externalId","type","properties","stats"],"type":"object"}}},"description":"table created"},"401":{"content":{"application/json":{"schema":{"description":"General error response that usually has a very generic message","properties":{"errors":{"items":{"properties":{"message":{"type":"string"},"type":{"description":"The type of the general error response","enum":["GeneralError"],"type":"string"}},"required":["type","message"],"type":"object"},"type":"array"}},"required":["errors"],"type":"object"}}},"description":"User unauthorized"},"403":{"content":{"application/json":{"schema":{"description":"General error response that usually has a very generic message","properties":{"errors":{"items":{"properties":{"message":{"type":"string"},"type":{"description":"The type of the general error response","enum":["GeneralError"],"type":"string"}},"required":["type","message"],"type":"object"},"type":"array"}},"required":["errors"],"type":"object"}}},"description":"User forbidden"},"404":{"content":{"application/json":{"schema":{"description":"General error response that usually has a very generic message","properties":{"errors":{"items":{"properties":{"message":{"type":"string"},"type":{"description":"The type of the general error response","enum":["GeneralError"],"type":"string"}},"required":["type","message"],"type":"object"},"type":"array"}},"required":["errors"],"type":"object"}}},"description":"Data source or permission not found"},"422":{"content":{"application/json":{"schema":{"description":"Error message that contains detailed information about certain parameters being incorrect","properties":{"errors":{"items":{"properties":{"key":{"type":"string"},"message":{"type":"string"},"type":{"description":"The type of the field error response","enum":["FieldError"],"type":"string"}},"required":["type","key","message"],"type":"object"},"type":"array"}},"required":["errors"],"type":"object"}}},"description":"Some of the give parameters are not correct"},"500":{"content":{"application/json":{"schema":{"description":"General error response that usually has a very generic message","properties":{"errors":{"items":{"properties":{"message":{"type":"string"},"type":{"description":"The type of the general error response","enum":["GeneralError"],"type":"string"}},"required":["type","message"],"type":"object"},"type":"array"}},"required":["errors"],"type":"object"}}},"description":"Internal server error"}},"summary":"Create a table","tags":["tables"],"x-handler-group":"Tables","postman":{"name":"Create a table","description":{"content":"This creates a new table resource\\n","type":"text/plain"},"url":{"path":["api","v1",":projectId","datasources",":dataSourceId","tables"],"host":["{{baseUrl}}"],"query":[],"variable":[{"description":{"content":"(Required) UUID of the project","type":"text/plain"},"type":"any","value":"<uuid>","key":"projectId"},{"description":{"content":"(Required) UUID of the data source","type":"text/plain"},"type":"any","value":"<uuid>","key":"dataSourceId"}]},"header":[{"key":"Content-Type","value":"application/json"}],"method":"POST","body":{"mode":"raw","raw":"{\\n    \\"name\\": \\"<string>\\",\\n    \\"type\\": \\"ViewTable\\",\\n    \\"description\\": \\"<string>\\",\\n    \\"documentation\\": \\"<string>\\",\\n    \\"externalId\\": \\"<string>\\",\\n    \\"properties\\": \\"<object>\\"\\n}"}},"method":"post","path":"/api/v1/{projectId}/datasources/{dataSourceId}/tables","hashId":"create-a-table","servers":[{"description":"Locally running","url":"http://localhost:{port}/hub","variables":{"port":{"default":"9191"}}},{"description":"Development environment","url":"https://dev.contiamo.io/{tenantId}/hub","variables":{"tenantId":{"default":"demo"}}},{"description":"Staging environment","url":"https://stg.contiamo.io/{tenantId}/hub","variables":{"tenantId":{"default":"demo"}}},{"description":"Production environment","url":"https://cloud.contiamo.com/{tenantId}/hub","variables":{"tenantId":{"default":"demo"}}}],"security":[{"tokenAuth":[]},{"doubleCookieAuth":[],"doubleCookieHeader":[]}],"permalink":"/contiamo/api/create-a-table","previous":{"title":"Create new managed table","permalink":"/contiamo/api/create-new-managed-table"},"next":{"title":"Delete a table","permalink":"/contiamo/api/delete-a-table"},"jsonRequestBodyExample":{"description":"string","documentation":"string","externalId":"string","name":"string","properties":{},"type":"ViewTable"}}')}}]);