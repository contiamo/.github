(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2062],{409950:function(e){"use strict";e.exports=JSON.parse('{"description":"Retrieve a single table by UUID or name","operationId":"GetTable","responses":{"200":{"content":{"application/json":{"schema":{"properties":{"data":{"properties":{"createdAt":{"format":"date-time","type":"string"},"currentColumnSetId":{"format":"uuid","type":"string"},"dataSourceId":{"format":"uuid","type":"string"},"description":{"maxLength":255,"type":"string"},"documentation":{"description":"Long form markdown field that can be used to document the resource","type":"string"},"externalId":{"nullable":true,"type":"string"},"id":{"format":"uuid","type":"string"},"isOrphaned":{"description":"Indicates that this table couldn\'t be synced from an external system","type":"boolean"},"kind":{"enum":["table"],"type":"string"},"lastUpdateErrorMessage":{"description":"contains an error message indicating why this table schema could not be updated","type":"string"},"name":{"maxLength":63,"type":"string"},"orphanedAt":{"format":"date-time","nullable":true,"type":"string"},"projectId":{"format":"uuid","type":"string"},"properties":{"type":"object"},"sql":{"description":"query that defines the table in case of a view","type":"string"},"stats":{"description":"Various statistics about the table","properties":{"columnCount":{"description":"How many columns the table has","type":"integer"},"linkCount":{"description":"How many links this resource is part of, either as a source or a target","type":"integer"}},"required":["columnCount","linkCount"],"type":"object"},"type":{"description":"Table type computed from the metadata:\\n* `ViewTable`: defined as a sql view (comes with a sql definition)\\n* `MaterializationTable`: same as view, but materialized\\n* `ExternalTable`: a table that is linked to an external entity not in the underlying data source (e.g. a FDW in postgres, or a BigQuery table which has its data populated from a spreadsheet)\\n* `RegularTable`: any other table types, including, but not limited to, a regular database table\\n* `OtherTable`: is just a fallback if the type is unknown.\\n","enum":["ViewTable","MaterializationTable","RegularTable","ExternalTable","OtherTable"],"type":"string"},"updatedAt":{"format":"date-time","type":"string"}},"required":["id","projectId","kind","name","description","documentation","dataSourceId","currentColumnSetId","isOrphaned","createdAt","updatedAt","orphanedAt","externalId","type","properties","stats"],"type":"object"},"fieldspec":{"items":{"properties":{"description":{"description":"A description of the purpose of this field\\n","maxLength":255,"type":"string"},"displayName":{"description":"A nice human-readable name for that field\\n","type":"string"},"filterable":{"default":false,"description":"Should this field show up as a filter in the catalog\\n","type":"boolean"},"hideIfEmpty":{"default":false,"description":"Should this field be hidden when the value is empty\\n","type":"boolean"},"inherited":{"default":false,"description":"Indicates that this field may be inherited from the parent resource\\n","type":"boolean"},"key":{"description":"lookup key for the field on the specific response types in dot notation.\\nExamples:\\n  `name` -> name is found toplevel of the instance object, i.e. `obj.name`\\n  `properties.category` -> category is found in the properties subobject, i.e. `obj.properties.category`\\n","type":"string"},"kind":{"description":"The source type of the field.\\n\\n- System fields are non-editable default fields.  These can not be modified for deleted.\\n\\n- Configurable fields are editable default fields. These can be modified but not deleted.\\n\\n- Custom are user defined fields. These are fully defined by the user.\\n","enum":["system","configurable","custom"],"readOnly":true,"type":"string"},"maxValue":{"nullable":true,"type":"number"},"minValue":{"nullable":true,"type":"number"},"name":{"description":"A nice computer-readable name for that field usable in postgres\\n","type":"string"},"searchable":{"default":false,"description":"Should this field be used in the catalog fuzzy search\\n","type":"boolean"},"type":{"description":"The data type of the field:\\n\\n- `text` is an arbitrary string\\n\\n- `multitext` is an arbitrary array of strings\\n\\n- `select` a value which can be selected from a list\\n\\n- `multiselect` is a `select` with multiple selected values, represented as an array\\n\\n- `boolean` is `true` or `false` value\\n\\n- `date` is a date string in `yyyy-mm-dd` format, e.g. `2019-08-21`\\n\\n- `datetime` is an RFC3339 datetime string, e.g. `2019-08-21T11:54:30.369917Z`\\n\\n- `number` is a numeric value, described by RFC8259, section 6.\\n\\n- `link` is a link object with a displayed text and URL, e.g. `{\\"displayText\\": \\"text\\", \\"url\\": \\"http://example.com\\"}`. Only absolute URLs with HTTP/HTTPS protocol are allowed.\\n","enum":["text","multitext","select","multiselect","boolean","date","datetime","number","link"],"type":"string"},"validValues":{"items":{"type":"string"},"type":"array"}},"required":["name","key","type","kind","filterable","searchable","description","hideIfEmpty","inherited"],"type":"object"},"type":"array"}},"required":["fieldspec","data"],"type":"object"}}},"description":"Object containing the requested table information"},"401":{"content":{"application/json":{"schema":{"description":"General error response that usually has a very generic message","properties":{"errors":{"items":{"properties":{"message":{"type":"string"},"type":{"description":"The type of the general error response","enum":["GeneralError"],"type":"string"}},"required":["type","message"],"type":"object"},"type":"array"}},"required":["errors"],"type":"object"}}},"description":"User unauthorized"},"403":{"content":{"application/json":{"schema":{"description":"General error response that usually has a very generic message","properties":{"errors":{"items":{"properties":{"message":{"type":"string"},"type":{"description":"The type of the general error response","enum":["GeneralError"],"type":"string"}},"required":["type","message"],"type":"object"},"type":"array"}},"required":["errors"],"type":"object"}}},"description":"User forbidden"},"404":{"content":{"application/json":{"schema":{"description":"General error response that usually has a very generic message","properties":{"errors":{"items":{"properties":{"message":{"type":"string"},"type":{"description":"The type of the general error response","enum":["GeneralError"],"type":"string"}},"required":["type","message"],"type":"object"},"type":"array"}},"required":["errors"],"type":"object"}}},"description":"Data source or permission not found"},"500":{"content":{"application/json":{"schema":{"description":"General error response that usually has a very generic message","properties":{"errors":{"items":{"properties":{"message":{"type":"string"},"type":{"description":"The type of the general error response","enum":["GeneralError"],"type":"string"}},"required":["type","message"],"type":"object"},"type":"array"}},"required":["errors"],"type":"object"}}},"description":"Internal server error"}},"summary":"Retrieve a table","tags":["tables"],"x-handler-group":"Tables","postman":{"name":"Retrieve a table","description":{"content":"Retrieve a single table by UUID or name","type":"text/plain"},"url":{"path":["api","v1",":projectId","datasources",":dataSourceId","tables",":tableId"],"host":["{{baseUrl}}"],"query":[],"variable":[{"description":{"content":"(Required) UUID of the project","type":"text/plain"},"type":"any","value":"<uuid>","key":"projectId"},{"description":{"content":"(Required) UUID or name of the data source","type":"text/plain"},"type":"any","value":"<string>","key":"dataSourceId"},{"description":{"content":"(Required) UUID or name of the table","type":"text/plain"},"type":"any","value":"<string>","key":"tableId"}]},"method":"GET"},"method":"get","path":"/api/v1/{projectId}/datasources/{dataSourceId}/tables/{tableId}","hashId":"retrieve-a-table","servers":[{"description":"Locally running","url":"http://localhost:{port}/hub","variables":{"port":{"default":"9191"}}},{"description":"Development environment","url":"https://dev.contiamo.io/{tenantId}/hub","variables":{"tenantId":{"default":"demo"}}},{"description":"Staging environment","url":"https://stg.contiamo.io/{tenantId}/hub","variables":{"tenantId":{"default":"demo"}}},{"description":"Production environment","url":"https://cloud.contiamo.com/{tenantId}/hub","variables":{"tenantId":{"default":"demo"}}}],"security":[{"tokenAuth":[]},{"doubleCookieAuth":[],"doubleCookieHeader":[]}],"permalink":"/contiamo/api/retrieve-a-table","previous":{"title":"Delete a table","permalink":"/contiamo/api/delete-a-table"},"next":{"title":"Update a table","permalink":"/contiamo/api/update-a-table"}}')}}]);